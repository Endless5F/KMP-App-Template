[versions]
agp = "8.8.0"
adaptive = "1.0.1"
androidx-activityCompose = "1.10.0"
androidx-ui-tooling = "1.7.6"
coil = "3.0.4"
compose-multiplatform = "1.7.3"
composeviews = "1.7.0.1"
haze = "1.2.1"
kotlinLogging = "7.0.0"
kotlinxUuidSqldelight = "0.1.1"
kottie = "1.9.6"
ksp = "2.1.0-1.0.29"
koin = "4.0.0"
kotlin = "2.1.0"
ktor = "3.0.1"
paging = "3.3.5"
pullrefresh = "1.4.0-beta03"
sqldelight = "2.0.2"
moko-media = "0.11.0"
moko-permissions = "0.18.1"
moko-geo = "0.7.0"
navigationCompose = "2.8.0-alpha10"
compose-rich-editor = "1.0.0-rc05-k2"
annotationJvm = "1.9.1"
room = "2.7.0-alpha12"


[libraries]
adaptive = { module = "org.jetbrains.compose.material3.adaptive:adaptive", version.ref = "adaptive" }
adaptive-layout = { module = "org.jetbrains.compose.material3.adaptive:adaptive-layout", version.ref = "adaptive" }
adaptive-navigation = { module = "org.jetbrains.compose.material3.adaptive:adaptive-navigation", version.ref = "adaptive" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-ui-tooling" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidx-ui-tooling" }
coil-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coil" }
coil-network-ktor = { group = "io.coil-kt.coil3", name = "coil-network-ktor3", version.ref = "coil" }
composeviews = { module = "io.github.ltttttttttttt:ComposeViews", version.ref = "composeviews" }
haze = { module = "dev.chrisbanes.haze:haze", version.ref = "haze" }
haze-materials = { module = "dev.chrisbanes.haze:haze-materials", version.ref = "haze" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging", version.ref = "kotlinLogging" }
kotlinx-uuid-core = { module = "app.softwork:kotlinx-uuid-core", version.ref = "kotlinxUuidSqldelight" }
kotlinx-uuid-datetime = { module = "app.softwork:kotlinx-uuid-datetime", version.ref = "kotlinxUuidSqldelight" }
kotlinx-uuid-sqldelight = { module = "app.softwork:kotlinx-uuid-sqldelight", version.ref = "kotlinxUuidSqldelight" }
kottie = { module = "io.github.ismai117:kottie", version.ref = "kottie" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
pullrefresh = { module = "dev.materii.pullrefresh:pullrefresh", version.ref = "pullrefresh" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-paging3-extensions = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-async-extensions = { module = "app.cash.sqldelight:async-extensions", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-primitive-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }
sqldelight-web-worker-driver= { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqldelight" }
moko-media = { module = "dev.icerock.moko:media", version.ref = "moko-media" }
moko-media-compose = { module = "dev.icerock.moko:media-compose", version.ref = "moko-media" }
moko-geo = { module = "dev.icerock.moko:geo", version.ref = "moko-geo" }
moko-geo-compose = { module = "dev.icerock.moko:geo-compose", version.ref = "moko-geo" }
moko-permissions = { module = "dev.icerock.moko:permissions", version.ref = "moko-permissions" }
moko-permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "moko-permissions" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
compose-rich-editor = { module = "com.mohamedrejeb.richeditor:richeditor-compose", version.ref = "compose-rich-editor" }
androidx-annotation = { group = "androidx.annotation", name = "annotation", version.ref = "annotationJvm" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "room" }
paging-compose = { module = "androidx.paging:paging-common", version.ref = "paging" }


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }


